name: template-proto-center
on:
  push:
    branches:
      - master
    paths:
      - 'template-api/src/main/proto/*'
      - 'template-api/src/main/java/*'
      - 'template-api/src/main/go/*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout branch
        uses: actions/checkout@v3
      - run: |
          rm -rf proto-center
      - name: clone project
        uses: GuillaumeFalourd/clone-github-repo-action@v2
        with:
          owner: 'drinkTeaT'
          repository: 'proto-center'
          access-token: ${{secrets.RESP_TOKEN}}
      - name: push to proto-center
        run: |
          project_name=$(basename `pwd`)
          echo "project name is : $project_name"
          git config --global user.name "robot"
          git config --global user.email oh.ulaual@gmail.com
          cd ./proto-center/

          if [ `grep -c $project_name README` -eq '0' ];then
            echo "- $project_name-->v$(sed -n '$p' README | awk -F "-->v" '{print $2+1}' | head)" >>README
            branchName=$(sed -n '$p' README | awk -F "-->" '{print $2}')
            git add . && git commit -m "add $project_name "
            git push
            # 切换分支
            echo "branch name is $branchName"
            git checkout -b $branchName
          else
            branchName=$(grep $project_name README  | awk -F "-->" '{print $2}' | head)
            echo "2 branch name is : $branchName"
            # 切换分支
            echo "branch name is $branchName"
            git checkout $branchName
          fi

          # 拷贝内容
          mkdir -p $project_name && cp -r ./template-api/src/main/* $project_name/
          # git add commit push 命令
          git add .
          git commit -m "$project_name's robot updated"
          git push --set-upstream origin $branchName
      - name: add tag
        run: |
          project_name=$(basename `pwd`)
          cd ./proto-center/
          isnottag="false"
          git describe --tag || isnottag="true"
          version=""
          branch=$(grep $project_name README  | awk -F "-->" '{print $2}' | head)
          if [ $isnottag = "true" ];then
            echo $isnottag
            version=$branch.0.1
            echo $version
            git tag $version
            git push --tags
            echo "- $version" >> README
            git add .
            git commit -m "add $version"
            git push
          else
            echo $isnottag
            version_ref=$(git describe --tags | awk -F "-" '{print $1}' | head)
            echo $version_ref
            version=`echo $version_ref | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF))$(NF-1)++; $NF=sprintf("%0*d", length($NF), ($NF+1)%(10^length($NF))); print}'`
            echo $version
            git tag $version
            git push --tags
            echo "- $version" >> README
            git add .
            git commit -m "add $version"
            git push
          fi
